[{"C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\index.js":"1","C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\App.js":"2","C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\reportWebVitals.js":"3","C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\Component\\Home\\Home.js":"4","C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\Component\\Home\\AddNewRestaurant.js":"5","C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\Component\\About\\About.js":"6","C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\Component\\Header\\Header.js":"7","C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\Component\\Home\\EditPage.js":"8","C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\Component\\Home\\ReviewPage.js":"9","C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\Component\\Footer\\Footer.js":"10"},{"size":643,"mtime":1630339213766,"results":"11","hashOfConfig":"12"},{"size":1607,"mtime":1630683660769,"results":"13","hashOfConfig":"12"},{"size":377,"mtime":1630330698536,"results":"14","hashOfConfig":"12"},{"size":7839,"mtime":1631381125652,"results":"15","hashOfConfig":"12"},{"size":4980,"mtime":1630961404965,"results":"16","hashOfConfig":"12"},{"size":1992,"mtime":1632318263509,"results":"17","hashOfConfig":"12"},{"size":1441,"mtime":1632310534230,"results":"18","hashOfConfig":"12"},{"size":6037,"mtime":1630399060373,"results":"19","hashOfConfig":"12"},{"size":7975,"mtime":1630686802152,"results":"20","hashOfConfig":"12"},{"size":1033,"mtime":1630616541550,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"52jc7i",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\index.js",[],["46","47"],"C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\App.js",["48"],"import './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport home from './Component/Home/Home';\nimport about from './Component/About/About';\nimport React, { Component } from 'react';\nimport logo from './Component/Header/RestView.png';\nimport Parallax from 'parallax-js';\nimport AddNewRestaurant from './Component/Home/AddNewRestaurant';\n\nexport default class App extends Component {\n  state = {\n    loading: true\n  };\n\n  componentDidMount() {\n    // this simulates an async action, after which the component will render the content\n    this.demoAsyncCall().then(() => this.setState({ loading: false }));\n  }\n\n  demoAsyncCall() {\n    const scene = document.getElementById('sceneForParallax');\n    const parallaxInstance = new Parallax(scene);\n    return new Promise((resolve) => setTimeout(() => resolve(), 250));\n  }\n\n  render() {\n    const { loading } = this.state;\n\n    if (loading) {\n      return (\n        <div className={'wrapperPreLoader'}>\n          <div id={'sceneForParallax'} className={'wrapperLogo'}>\n            <img alt={'logo'} data-depth={'1.5'} src={logo} />\n            <div\n              data-depth={'1'}\n              className={'preLoader spinner-grow text-warning'}\n            />\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className='App'>\n        <Router>\n          <switch>\n            <Route exact path='/about' component={about} />\n            <Route exact path='/add' component={AddNewRestaurant} />\n            <Route exact path='/' component={home} />\n          </switch>\n        </Router>\n      </div>\n    );\n  }\n}\n","C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\reportWebVitals.js",[],"C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\Component\\Home\\Home.js",["49","50","51","52"],"import React, { Component } from 'react';\nimport './Home.css';\nimport './Home.scss';\nimport Header from '../Header/Header';\nimport Footer from '../Footer/Footer';\nimport axios from 'axios';\nimport 'react-bootstrap';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport AddNewRestaurant from './AddNewRestaurant.js';\nimport EditPage from './EditPage';\nimport Rating from '@material-ui/lab/Rating';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport ReviewPage from './ReviewPage';\nimport { Link } from 'react-router-dom';\n\nconst StyledRating = withStyles({})(Rating);\n\nexport default class home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listRestaurants: [],\n      isLoading: true\n    };\n  }\n\n  onBackToHome = () => {\n    this.setState({ isAddNew: false });\n  };\n\n  createNewRestaurant = () => {\n    this.setState({ isAddNew: true });\n  };\n  updateListRestaurants = () => {\n    this.setState({ isLoading: true });\n    axios\n      .get('https://restaurants-database.herokuapp.com/api/v1/restaurants/')\n      .then((response) => {\n        // handle success\n        if (this.state.listRestaurants !== response.data.restaurants) {\n          this.setState({\n            listRestaurants: response.data.restaurants,\n            isLoading: false\n          });\n        }\n      })\n      .catch(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  render() {\n    if (!this.state.isAddNew && !this.state.editMode && !this.state.addReview) {\n      let listRestaurants;\n\n      if (this.state.listRestaurants.length === 0) {\n        axios\n          .get('https://restaurants-database.herokuapp.com/api/v1/restaurants/')\n          .then((response) => {\n            // handle success\n            if (this.state.listRestaurants !== response.data.restaurants) {\n              this.setState({\n                listRestaurants: response.data.restaurants,\n                isLoading: false\n              });\n            }\n          })\n          .catch(() => {\n            this.setState({ isLoading: false });\n          });\n      }\n      let renderList = [];\n      for (let index in this.state.listRestaurants) {\n        renderList.push(\n          <div className='cardRest'>\n            <img\n              src='https://media-cdn.tripadvisor.com/media/photo-s/14/07/c6/eb/elissa-bar-restaurant.jpg'\n              alt='Person'\n              className='card__image'\n            />\n            <p className='card__name'>\n              {this.state.listRestaurants[index].name}\n            </p>\n            <div className='grid-container'>\n              <OverlayTrigger\n                placement='top-start'\n                overlay={<Tooltip className='errorTooltip'>Location</Tooltip>}\n              >\n                <div className='grid-child-posts'>\n                  {this.state.listRestaurants[index].location}\n                </div>\n              </OverlayTrigger>\n\n              <div className='grid-child-followers'>\n                {this.state.listRestaurants[index].reviews_quantity\n                  ? this.state.listRestaurants[index].reviews_quantity\n                  : 0}{' '}\n                review\n              </div>\n            </div>\n            <StyledRating\n              emptyIcon={<StarBorderIcon fontSize='inherit' />}\n              className={'ratingStar'}\n              name='half-rating-read'\n              defaultValue={this.state.listRestaurants[index].rating}\n              precision={0.1}\n              readOnly\n            />\n            <ul className='social-icons'>\n              <OverlayTrigger\n                placement='top-start'\n                overlay={\n                  <Tooltip className='errorTooltip'>price rating</Tooltip>\n                }\n              >\n                <li>\n                  <a>\n                    <p className={'priceRange'}>\n                      {this.state.listRestaurants[index].price_range}\n                    </p>\n                  </a>\n                </li>\n              </OverlayTrigger>\n              <OverlayTrigger\n                placement='top-start'\n                overlay={<Tooltip className='errorTooltip'>Web Site</Tooltip>}\n              >\n                <li>\n                  <a\n                    href={this.state.listRestaurants[index].website}\n                    target={'_blank'}\n                  >\n                    <i className='fas fa-satellite' />\n                  </a>\n                </li>\n              </OverlayTrigger>\n            </ul>\n            <button\n              onClick={() => {\n                this.setState({\n                  addReview: true,\n                  reviewData: this.state.listRestaurants[index]\n                });\n              }}\n              className='btnCard draw-border'\n            >\n              Review\n            </button>\n            <button\n              onClick={() => {\n                this.setState({\n                  editMode: true,\n                  editData: this.state.listRestaurants[index]\n                });\n              }}\n              className='btnCard draw-border'\n            >\n              Edit\n            </button>\n          </div>\n        );\n      }\n      return (\n        <>\n          <div className={'content'}>\n            <Header />\n            <div className={'wrapperHome'}>\n              <div className={'containerHome'}>\n                <div className={'contentHome'}>\n                  <button\n                    onClick={this.updateListRestaurants}\n                    type='button'\n                    className={'updateList btn'}\n                  >\n                    Update list\n                  </button>\n                  <Link to={'/add'} className={'updateList btn'}>\n                    Add\n                  </Link>\n                  {this.spinnerOrRestaurants(renderList)}\n                </div>\n              </div>\n            </div>\n          </div>\n          <Footer />\n        </>\n      );\n    } else if (this.state.addReview) {\n      return (\n        <>\n          <div className={'content'}>\n            <Header />\n            <div className={'wrapperHome'}>\n              <div className={'containerHome'}>\n                <ReviewPage\n                  editData={this.state.reviewData}\n                  updateListRestaurant={this.updateListRestaurants}\n                  onBackToHome={() => {\n                    this.setState({ addReview: false });\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <Footer />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <div className={'content'}>\n            <Header />\n            <div className={'wrapperHome'}>\n              <div className={'containerHome'}>\n                <EditPage\n                  editData={this.state.editData}\n                  updateListRestaurant={this.updateListRestaurants}\n                  onBackToHome={() => {\n                    this.setState({ editMode: false });\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <Footer />\n        </>\n      );\n    }\n  }\n\n  spinnerOrRestaurants = (renderList) => {\n    if (this.state.isLoading) {\n      return (\n        <div>\n          <div className={'mainSpinner spinner-grow text-secondary'} />\n        </div>\n      );\n    } else {\n      if (renderList.length) {\n        return <div className={'contentRest'}>{renderList}</div>;\n      } else {\n        return (\n          <div className={'contentRest'}>\n            <div>\n              <i className='flagForNotFound far fa-flag' />\n              <h2>No restaurants found, please add first</h2>\n            </div>\n          </div>\n        );\n      }\n    }\n  };\n}\n","C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\Component\\Home\\AddNewRestaurant.js",[],"C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\Component\\About\\About.js",["53"],"C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\Component\\Header\\Header.js",[],"C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\Component\\Home\\EditPage.js",[],"C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\Component\\Home\\ReviewPage.js",[],"C:\\Users\\38063\\IdeaProjects\\restaurantsSites\\src\\Component\\Footer\\Footer.js",["54","55","56","57","58","59","60","61","62"],"import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  BrowserRouter,\n  Link,\n  NavLink\n} from 'react-router-dom';\nimport './Footer.css';\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div className={'contentFooter'}>\n        <div className={'footer'}>\n          <div>Created By:</div>\n          <a href='https://github.com/Padiilab' target='_blank'>\n            FrontEnd: Mykola Padii\n          </a>\n          <br />\n          <a href='https://github.com/Bohdlesk' target='_blank'>\n            BackEnd: Bohdan Leskovets\n          </a>\n          <br />\n          <a href='https://github.com/IllyaPystovga' target='_blank'>\n            Trainee: Illya Pystovgar\n          </a>\n          <br />\n          <a href='https://github.com/TonyLDV' target='_blank'>\n            Trainee: Anton Liediaiev\n          </a>\n          <br />\n          <a href='https://t.me/Oigenius' target='_blank'>\n            QA: Eugene Yakobchuk\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":22,"column":11,"nodeType":"69","messageId":"70","endLine":22,"endColumn":27},{"ruleId":"67","severity":1,"message":"71","line":10,"column":8,"nodeType":"69","messageId":"70","endLine":10,"endColumn":24},{"ruleId":"67","severity":1,"message":"72","line":56,"column":11,"nodeType":"69","messageId":"70","endLine":56,"endColumn":26},{"ruleId":"73","severity":1,"message":"74","line":119,"column":19,"nodeType":"75","endLine":119,"endColumn":22},{"ruleId":"76","severity":1,"message":"77","line":133,"column":21,"nodeType":"78","endLine":133,"endColumn":38},{"ruleId":"67","severity":1,"message":"79","line":6,"column":10,"nodeType":"69","messageId":"70","endLine":6,"endColumn":14},{"ruleId":"67","severity":1,"message":"80","line":3,"column":20,"nodeType":"69","messageId":"70","endLine":3,"endColumn":26},{"ruleId":"67","severity":1,"message":"81","line":4,"column":3,"nodeType":"69","messageId":"70","endLine":4,"endColumn":16},{"ruleId":"67","severity":1,"message":"79","line":5,"column":3,"nodeType":"69","messageId":"70","endLine":5,"endColumn":7},{"ruleId":"67","severity":1,"message":"82","line":6,"column":3,"nodeType":"69","messageId":"70","endLine":6,"endColumn":10},{"ruleId":"76","severity":1,"message":"77","line":16,"column":49,"nodeType":"78","endLine":16,"endColumn":64},{"ruleId":"76","severity":1,"message":"77","line":20,"column":49,"nodeType":"78","endLine":20,"endColumn":64},{"ruleId":"76","severity":1,"message":"77","line":24,"column":54,"nodeType":"78","endLine":24,"endColumn":69},{"ruleId":"76","severity":1,"message":"77","line":28,"column":48,"nodeType":"78","endLine":28,"endColumn":63},{"ruleId":"76","severity":1,"message":"77","line":32,"column":43,"nodeType":"78","endLine":32,"endColumn":58},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'parallaxInstance' is assigned a value but never used.","Identifier","unusedVar","'AddNewRestaurant' is defined but never used.","'listRestaurants' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Link' is defined but never used.","'Router' is defined but never used.","'BrowserRouter' is defined but never used.","'NavLink' is defined but never used.","no-global-assign","no-unsafe-negation"]