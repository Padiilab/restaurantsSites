[{"E:\\restaurantsSites\\src\\index.js":"1","E:\\restaurantsSites\\src\\reportWebVitals.js":"2","E:\\restaurantsSites\\src\\App.js":"3","E:\\restaurantsSites\\src\\Component\\About\\About.js":"4","E:\\restaurantsSites\\src\\Component\\Home\\Home.js":"5","E:\\restaurantsSites\\src\\Component\\Header\\Header.js":"6","E:\\restaurantsSites\\src\\Component\\Footer\\Footer.js":"7"},{"size":643,"mtime":1608493841221,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":586,"mtime":1607719050817,"results":"11","hashOfConfig":"9"},{"size":737,"mtime":1607887743684,"results":"12","hashOfConfig":"9"},{"size":5729,"mtime":1608502613929,"results":"13","hashOfConfig":"9"},{"size":798,"mtime":1611477411420,"results":"14","hashOfConfig":"9"},{"size":733,"mtime":1608405406910,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1qf97kv",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"E:\\restaurantsSites\\src\\index.js",[],["34","35"],"E:\\restaurantsSites\\src\\reportWebVitals.js",[],"E:\\restaurantsSites\\src\\App.js",["36"],"import './App.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport home from \"./Component/Home/Home\";\nimport about from \"./Component/About/About\";\nimport React from \"react\";\nimport Header from \"./Component/Header/Header\";\n\nfunction App() {\n    return (\n\n        <div className=\"App\">\n            <Router>\n                <switch>\n                    <Route exact path=\"/about\" component={about}/>\n                    <Route exact path=\"/\" component={home}/>\n                </switch>\n            </Router>\n        </div>\n\n    )\n        ;\n}\n\nexport default App;\n","E:\\restaurantsSites\\src\\Component\\About\\About.js",[],"E:\\restaurantsSites\\src\\Component\\Home\\Home.js",["37","38","39","40"],"import React, {Component} from \"react\";\r\nimport './Home.css'\r\nimport Header from \"../Header/Header\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport axios from 'axios';\r\nimport 'react-bootstrap';\r\nimport Swal, {isLoading} from 'sweetalert2'\r\nimport spinner from './Spinner-1s-200px.gif';\r\n\r\nexport default class home extends Component {\r\n    state = {\r\n        listRestaurants: [],\r\n        isLoading: true,\r\n    }\r\n    deleteCurrentRestaurant = (index) => {\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                axios.delete(`https://restaurants-database.herokuapp.com/api/v1/restaurants/${this.state.listRestaurants[index].id}`)\r\n                    .then((response) => {\r\n                        this.updateListRestaurants();\r\n                        Swal.fire(\r\n                            'Deleted!',\r\n                            'Your file has been deleted.',\r\n                            'success'\r\n                        )\r\n                    })\r\n                    .catch(() => {\r\n                        Swal.fire({\r\n                            icon: 'error',\r\n                            title: 'Oops...',\r\n                            text: 'Something went wrong!',\r\n                        })\r\n                    });\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n    createNewRestaurant = () => {\r\n\r\n    }\r\n    updateListRestaurants = () => {\r\n        this.setState({isLoading: true});\r\n        axios.get('https://restaurants-database.herokuapp.com/api/v1/restaurants/')\r\n            .then((response) => {\r\n                // handle success\r\n                if (this.state.listRestaurants !== response.data.restaurants) {\r\n                    this.setState({listRestaurants: response.data.restaurants, isLoading: false})\r\n                }\r\n\r\n            })\r\n            .catch(() => {\r\n                this.setState({isLoading: false});\r\n            });\r\n    }\r\n    renderWebsite = (index) => {\r\n        if (this.state.listRestaurants[index].website) {\r\n            return (\r\n                <div className=\"product-buttons\">\r\n\r\n                    <a target={\"_blank\"} href={this.state.listRestaurants[index].website} className=\"button\">Сайт</a>\r\n                </div>)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let listRestaurants;\r\n\r\n        if (this.state.listRestaurants.length === 0) {\r\n            axios.get('https://restaurants-database.herokuapp.com/api/v1/restaurants/')\r\n                .then((response) => {\r\n                    // handle success\r\n                    if (this.state.listRestaurants !== response.data.restaurants) {\r\n                        this.setState({listRestaurants: response.data.restaurants,isLoading: false})\r\n                    }\r\n\r\n                })\r\n                .catch(() => {\r\n                    this.setState({isLoading: false});\r\n                });\r\n        }\r\n        let renderList = [];\r\n        for (let index in this.state.listRestaurants) {\r\n            renderList.push(\r\n                <div className=\"product-wrap\">\r\n                    <div className=\"product-item\">\r\n                        <img alt={'restaurantPict'}\r\n                             src=\"https://media-cdn.tripadvisor.com/media/photo-s/14/07/c6/eb/elissa-bar-restaurant.jpg\"/>\r\n                        {this.renderWebsite(index)}\r\n                    </div>\r\n                    <div className=\"product-title\">\r\n                        <a href={\"\"}>{this.state.listRestaurants[index].name}</a>\r\n                        <span className=\"product-price\">Price: {this.state.listRestaurants[index].price_range}</span>\r\n                        <br/>\r\n                        <span className=\"product-price\">Location: {this.state.listRestaurants[index].location}</span>\r\n                        <br/>\r\n                        <i className=\"basketForDelete fas fa-trash-alt fa-lg\"\r\n                           onClick={(event) => this.deleteCurrentRestaurant(index, event)}/>\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n                <div className={\"content\"}>\r\n                    <Header/>\r\n                    <div className={'wrapperHome'}>\r\n\r\n                        <div className={\"containerHome\"}>\r\n                            <div className={\"contentHome\"}>\r\n                                <button onClick={this.updateListRestaurants} type=\"button\"\r\n                                        className={\"updateList btn\"}>Update list\r\n                                </button>\r\n                                <button onClick={this.createNewRestaurant} type=\"button\"\r\n                                        className={\"createRest btn\"}>Add institution\r\n                                </button>\r\n                                {this.spinnerOrRestaurants(renderList)}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <Footer/>\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    spinnerOrRestaurants = (renderList) => {\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <div>\r\n                    <img className={'Spinner'} alt={'spinner'} src={spinner}/>\r\n                </div>);\r\n        } else {\r\n            return (\r\n                <div className={\"contentRest\"}>\r\n                    {renderList}\r\n                </div>);\r\n        }\r\n    }\r\n}","E:\\restaurantsSites\\src\\Component\\Header\\Header.js",["41","42","43","44"],"E:\\restaurantsSites\\src\\Component\\Footer\\Footer.js",["45","46","47","48","49","50"],"import React, {Component} from \"react\";\r\nimport {BrowserRouter as Router, BrowserRouter, Link, NavLink} from \"react-router-dom\";\r\nimport './Footer.css'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className={\"contentFooter\"}>\r\n                <div className={'footer'}>\r\n                    <div>Created By:</div>\r\n                    <br/>\r\n                    <a href={\"https://github.com/Padiilab\"} target={\"_blank\"}>FrontEnd: Mykola Padii</a>\r\n                    <br/>\r\n                    <a href={\"https://github.com/Bohdlesk\"} target={\"_blank\"}>BackEnd: Bohdan Leskovets</a>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":6,"column":8,"nodeType":"57","messageId":"58","endLine":6,"endColumn":14},{"ruleId":"55","severity":1,"message":"59","line":7,"column":15,"nodeType":"57","messageId":"58","endLine":7,"endColumn":24},{"ruleId":"60","severity":1,"message":"61","line":69,"column":24,"nodeType":"62","endLine":69,"endColumn":41},{"ruleId":"55","severity":1,"message":"63","line":75,"column":13,"nodeType":"57","messageId":"58","endLine":75,"endColumn":28},{"ruleId":"64","severity":1,"message":"65","line":100,"column":25,"nodeType":"66","endLine":100,"endColumn":38},{"ruleId":"55","severity":1,"message":"67","line":2,"column":26,"nodeType":"57","messageId":"58","endLine":2,"endColumn":32},{"ruleId":"55","severity":1,"message":"68","line":2,"column":34,"nodeType":"57","messageId":"58","endLine":2,"endColumn":47},{"ruleId":"55","severity":1,"message":"69","line":2,"column":55,"nodeType":"57","messageId":"58","endLine":2,"endColumn":62},{"ruleId":"70","severity":1,"message":"71","line":13,"column":37,"nodeType":"66","endLine":13,"endColumn":80},{"ruleId":"55","severity":1,"message":"67","line":2,"column":26,"nodeType":"57","messageId":"58","endLine":2,"endColumn":32},{"ruleId":"55","severity":1,"message":"68","line":2,"column":34,"nodeType":"57","messageId":"58","endLine":2,"endColumn":47},{"ruleId":"55","severity":1,"message":"72","line":2,"column":49,"nodeType":"57","messageId":"58","endLine":2,"endColumn":53},{"ruleId":"55","severity":1,"message":"69","line":2,"column":55,"nodeType":"57","messageId":"58","endLine":2,"endColumn":62},{"ruleId":"60","severity":1,"message":"61","line":12,"column":61,"nodeType":"62","endLine":12,"endColumn":78},{"ruleId":"60","severity":1,"message":"61","line":14,"column":61,"nodeType":"62","endLine":14,"endColumn":78},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'isLoading' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'listRestaurants' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Router' is defined but never used.","'BrowserRouter' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]